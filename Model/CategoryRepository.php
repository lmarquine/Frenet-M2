<?php
/**
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright Copyright (c) 2018 MagedIn. (http://www.magedin.com)
 *
 * @author    Bruno Gemelli <bruno.gemelli@magedin.com>
 */

namespace MagedIn\Frenet\Model;

class CategoryRepository implements \MagedIn\Frenet\Api\CategoryRepositoryInterface
{

    protected $logger;

    /**
     * @var \Magento\Catalog\Model\ResourceModel\Category\CollectionFactory
     */
    protected $_categoryCollectionFactory;

    /**
     * ServiceRepository constructor.
     *
     * @param Context $context
     */
    public function __construct(
        \Magento\Catalog\Model\ResourceModel\Category\CollectionFactory $categoryCollectionFactory,
        \Psr\Log\LoggerInterface $logger
    )
    {
        $this->_categoryCollectionFactory = $categoryCollectionFactory;
        $this->logger = $logger;
        $this->logger->debug("Frenet category iniciado");        
    }

    /**
     * Get category collection
     *
     * @param bool $isActive
     * @param bool|int $level
     * @param bool|string $sortBy
     * @param bool|int $pageSize
     * @return \Magento\Catalog\Model\ResourceModel\Category\Collection or array
     */
    protected function getCategoryCollection($isActive = true, $level = false, $sortBy = false, $pageSize = false)
    {
        $collection = $this->_categoryCollectionFactory->create();
        $collection->addAttributeToSelect('*');        
        
        // select only active categories
        if ($isActive) {
            $collection->addIsActiveFilter();
        }
                
        // select categories of certain level
        if ($level) {
            $collection->addLevelFilter($level);
        }
        
        // sort categories by some value
        if ($sortBy) {
            $collection->addOrderField($sortBy);
        }
        
        // select certain number of categories
        if ($pageSize) {
            $collection->setPageSize($pageSize); 
        }    
        
        return $collection;
    }    

    /**
     * @param Magento\Catalog\Model\Product $productObj
     * 
     * @return array
     */
    public function getCategories($productObj) {
        $categoryIds = $productObj->getCategoryIds();
        $result = '';

        if (count($categoryIds) > 0) {

            $categories = $this->getCategoryCollection()->addAttributeToFilter('entity_id', $categoryIds);
            foreach ($categories as $cat) {
                if(strpos($result, $cat->getName())=== false)
                    $result .= $cat->getName().'|';
            }
    
        }

        return $result;
    }

}