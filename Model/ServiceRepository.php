<?php
/**
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright Copyright (c) 2018 MagedIn. (http://www.magedin.com)
 *
 * @author    Bruno Gemelli <bruno.gemelli@magedin.com>
 */

namespace MagedIn\Frenet\Model;

use Magento\Framework\Model\AbstractModel;
use MagedIn\Frenet\Model\Shipping\FrenetApi as FrenetApi;

class ServiceRepository extends AbstractModel implements \MagedIn\Frenet\Api\ServiceRepositoryInterface
{

    /**
     * @var \MagedIn\Frenet\Model\Shipping\FrenetApi
     */
    protected $frenetApi;

    /**
     * @var \Psr\Log\LoggerInterface
     */
    protected $logger;

    /**
     * @var \MagedIn\Frenet\Model\ProductRepository 
     * /
    protected $_productShipping;

    /**
     * @var \Magento\Framework\HTTP\ZendClientFactory
     */
    protected $_zendClientFactory;

    /**
     * @var \Magento\Framework\App\Config\ScopeConfigInterface
     */
    protected $_scopeConfig;    

    /**
     * ServiceRepository constructor.
     *
     * @param Context $context
     */
    public function __construct(
        \Magento\Catalog\Model\ProductRepository $productRepository,
        \Magento\Framework\HTTP\ZendClientFactory $zendClientFactory,
        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
        \MagedIn\Frenet\Model\ProductRepository $productShipping,
        \Psr\Log\LoggerInterface $logger, 
        array $data = []
    )
    {
        $this->_productRepository = $productRepository;
        $this->_zendClientFactory = $zendClientFactory;
        $this->_scopeConfig       = $scopeConfig;
        $this->logger = $logger;
        $this->_productShipping = $productShipping;

        $this->logger->debug("Frenet iniciado");        
    }

    /**
     * Handle Frenet API request for shipping quote
     *
     * @param \Magento\Quote\Model\Quote\Address\RateRequest $rateRequest
     *
     * @return mixed|null
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     * @throws \Zend_Http_Client_Exception
     */
    public function getShippingQuote(\Magento\Quote\Model\Quote\Address\RateRequest $rateRequest)
    {

        try {

            $coupon = null;
            $recipientDocument = null;
            $add_delivery_days = $this->getConfigData('carriers/magedinfrenet/add_delivery_days');
            $msgprazo = $this->getConfigData('carriers/magedinfrenet/msgprazo');
    
            $apiBodyRequest = [
                'Coupom' => $coupon,                    
                'SellerCEP'             => $this->getConfigData('shipping/origin/postcode'),
                'RecipientCEP'          => $rateRequest->getDestPostcode(),
                'RecipientCountry'      => $rateRequest->getDestCountryId(),
                'RecipientDocument'     => $recipientDocument,
                'ShipmentInvoiceValue'  => $rateRequest->getPackageValueWithDiscount(),
                'ShippingItemArray'     => $this->_prepareQuoteItems($rateRequest)
            ];

            $token = $this->getConfigData('carriers/magedinfrenet/token');            
            
            $frenetApi = new FrenetApi($this->logger);
            $response = $frenetApi->call( $token, $apiBodyRequest, $this->_zendClientFactory );

            return $response;
            
        }
        catch(\Exception $exc) {
            $this->logger->critical("Frenet-getShippingQuote-Error: ". $exc->getMessage());
        }

        return null;
    }

    /**
     * @param \Magento\Quote\Model\Quote\Address\RateRequest $rateRequest
     *
     * @return array
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     */
    protected function _prepareQuoteItems(\Magento\Quote\Model\Quote\Address\RateRequest $rateRequest)
    {
        $items = [];

        $use_default = $this->getConfigData('carriers/magedinfrenet/use_default');
        $default_length = $this->getConfigData('carriers/magedinfrenet/default_length');
        $default_width = $this->getConfigData('carriers/magedinfrenet/default_width');
        $default_height = $this->getConfigData('carriers/magedinfrenet/default_height');        
        $default_weight = $this->getConfigData('carriers/magedinfrenet/default_weight');        
        $weight_type = $this->getConfigData('carriers/magedinfrenet/weight_type');        

        $this->logger->debug("use_default: " . $use_default . ";length: " . $default_length . ";width: " . $default_width . ";height: " . $default_height . ";default_weight: " . $default_weight . ";weight_type: " . $weight_type);

        $this->_productShipping->setDefault($use_default, $default_length, $default_width, $default_height, $default_weight, $weight_type);

        /** @var \Magento\Quote\Api\Data\CartItemInterface $item */
        foreach ($rateRequest->getAllItems() as $item) {

            $shippingItem = $this->_productShipping->getShippingItem($item);
            if (!$shippingItem) continue;
            $items[] = $shippingItem;
        }

        return $items;
    }

    /**
     * @param $path
     *
     * @return mixed
     */
    public function getConfigData($path)
    {
        return $this->_scopeConfig->getValue(
            $path,
            \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
    }
}